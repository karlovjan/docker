# Global settings
global

    #stats socket ipv4@127.0.0.1:8404 user haproxy group haproxy mode 660 level admin expose-fd listeners
    log stdout format raw local0 info
    maxconn 4000
    user haproxy
    group haproxy
    daemon
    # Stats socket (optional, for monitoring)
    #stats socket /var/run/haproxy.sock mode 660 level admin

    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

# Default settings
defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000

# Frontend configuration for HTTP
frontend ebr_frontend
    bind :80
    bind :443 ssl crt /etc/ssl/certs/ebr.fio.cz.pem

    http-request redirect scheme https code 301 unless { ssl_fc }

    log stdout format raw local0 info

    # Referer must be with https
    #http-request set-header Referer https://ebr.fio.cz
    #http-request set-header Origin https://ebr.fio.cz

	capture request header Referer len 64
	#log-format %ci:%cp\ [%t]\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r
	http-request capture req.hdr(Host) len 50

	# uprava headrov pre #5681231
	http-request set-header X-Forwarded-Host %[req.hdr(Host)]

	# doplneni user agenta na konec zaznamu #8582540
	http-request capture req.hdr(User-Agent) len 400

	http-request set-header x-forwarded-proto %[ssl_fc,iif(https,http)]

    # docker gateway IP  172.18.0.1
	option forwardfor except 172.18.0.1

	http-response set-header Strict-Transport-Security max-age=63072000
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response add-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy strict-origin-when-cross-origin

    # ACL to match the specific hostname
    acl host_ebr_baros hdr(host) -i ebr.fio.cz

    # Define ACLs for URL-based routing
    acl path_streamer         path_beg /streamer

    # Use the ACLs for routing
    use_backend streamer-cluster if path_streamer host_ebr_baros
    use_backend ebroker_fio_cz if host_ebr_baros

# Backend services configuration
backend ebroker_fio_cz
	mode http
	log stdout format raw local0 info

	stick-table type ip size 200k expire 10s store http_req_rate(10s)
	http-request track-sc0 src

	http-request replace-path /(.*) /ebroker_java/\1
    acl rewrite_location res.hdr(Location) -m found
    #http-response replace-header Location (http|https)://(.*)\/ebroker_java\/(.*) https://\2/\3 if rewrite_location

    http-response replace-header Location ^http://tomcat1:8080/ebroker_java/(.*) http://%[hdr(Host)]\1 if rewrite_location

    acl hdr_set_cookie_path res.hdr(Set-cookie) -m sub Path=
    http-response replace-value Set-Cookie (.*)\ Path=(.*) \1\ Path=/ if hdr_set_cookie_path

    cookie sessionid prefix

    server ebr1 tomcat1:8080 check cookie ebr1

backend streamer-cluster
    log stdout format raw local0 info

    # Health check configuration for streamer service
    option httpchk HEAD /streamer/healthcheck
    server streamer1 streamer1:11080 check

